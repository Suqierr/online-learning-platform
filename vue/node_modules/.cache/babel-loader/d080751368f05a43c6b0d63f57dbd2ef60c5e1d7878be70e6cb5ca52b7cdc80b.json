{"ast":null,"code":"import * as echarts from \"echarts\";\nlet barOptions = {\n  title: {\n    text: '平台所有资料总数统计（柱状图）',\n    // 主标题\n    subtext: '统计维度：资料类型',\n    // 副标题\n    left: 'center'\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\n  },\n\n  yAxis: {\n    type: 'value'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [{\n    data: [120, 200, 150, 80, 70, 110, 130],\n    // 示例数据：横坐标维度对应的值（纵坐标）\n    type: 'bar',\n    itemStyle: {\n      normal: {\n        color: function () {\n          return \"#\" + Math.floor(Math.random() * (256 * 256 * 256 - 1)).toString(16);\n        }\n      }\n    }\n  }]\n};\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: []\n    };\n  },\n  created() {\n    this.$request.get('/notice/selectAll').then(res => {\n      this.notices = res.data || [];\n    });\n    this.loadBar();\n  },\n  methods: {\n    loadBar() {\n      this.$request.get('/getBar').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('bar');\n          let myChart = echarts.init(chartDom);\n          barOptions.title.text = res.data.text;\n          barOptions.title.subtext = res.data.subText;\n          barOptions.xAxis.data = res.data.xAxis;\n          barOptions.series[0].data = res.data.yAxis;\n          myChart.setOption(barOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","barOptions","title","text","subtext","left","xAxis","type","data","yAxis","tooltip","trigger","series","itemStyle","normal","color","Math","floor","random","toString","name","user","JSON","parse","localStorage","getItem","notices","created","$request","get","then","res","loadBar","methods","code","chartDom","document","getElementById","myChart","init","subText","setOption","$message","error","msg"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\" style=\"padding: 15px\">\n      您好，{{ user?.name }}！欢迎使用本系统\n    </div>\n\n    <div style=\"display: flex; margin: 10px 0\">\n      <div style=\"width: 50%;\" class=\"card\">\n        <div style=\"margin-bottom: 30px; font-size: 20px; font-weight: bold\">公告列表</div>\n        <div >\n          <el-timeline  reverse slot=\"reference\">\n            <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\n              <el-popover\n                  placement=\"right\"\n                  width=\"200\"\n                  trigger=\"hover\"\n                  :content=\"item.content\">\n                <span slot=\"reference\">{{ item.title }}</span>\n              </el-popover>\n            </el-timeline-item>\n          </el-timeline>\n        </div>\n      </div>\n      <div style=\"width: 50%;height: 300px\" class=\"card\" id=\"bar\">\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nlet barOptions = {\n  title: {\n    text: '平台所有资料总数统计（柱状图）', // 主标题\n    subtext: '统计维度：资料类型', // 副标题\n    left: 'center'\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\n  },\n  yAxis: {\n    type: 'value'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130], // 示例数据：横坐标维度对应的值（纵坐标）\n      type: 'bar',\n      itemStyle: {\n        normal: {\n          color:function(){return \"#\"+Math.floor(Math.random()*(256*256*256-1)).toString(16);}\n        },\n      },\n    }\n  ]\n}\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: []\n    }\n  },\n  created() {\n    this.$request.get('/notice/selectAll').then(res => {\n      this.notices = res.data || []\n    })\n    this.loadBar()\n\n  },\n  methods:{\n    loadBar() {\n      this.$request.get('/getBar').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('bar');\n          let myChart = echarts.init(chartDom);\n          barOptions.title.text = res.data.text\n          barOptions.title.subtext = res.data.subText\n          barOptions.xAxis.data = res.data.xAxis\n          barOptions.series[0].data = res.data.yAxis\n          myChart.setOption(barOptions);\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n  }\n}\n</script>\n"],"mappings":"AA+BA,YAAAA,OAAA;AACA,IAAAC,UAAA;EACAC,KAAA;IACAC,IAAA;IAAA;IACAC,OAAA;IAAA;IACAC,IAAA;EACA;EACAC,KAAA;IACAC,IAAA;IACAC,IAAA;EACA;;EACAC,KAAA;IACAF,IAAA;EACA;EACAG,OAAA;IACAC,OAAA;EACA;EACAC,MAAA,GACA;IACAJ,IAAA;IAAA;IACAD,IAAA;IACAM,SAAA;MACAC,MAAA;QACAC,KAAA,WAAAA,CAAA;UAAA,aAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,4BAAAC,QAAA;QAAA;MACA;IACA;EACA;AAEA;AACA;EACAC,IAAA;EACAZ,KAAA;IACA;MACAa,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA,CAAAC,GAAA,sBAAAC,IAAA,CAAAC,GAAA;MACA,KAAAL,OAAA,GAAAK,GAAA,CAAAvB,IAAA;IACA;IACA,KAAAwB,OAAA;EAEA;EACAC,OAAA;IACAD,QAAA;MACA,KAAAJ,QAAA,CAAAC,GAAA,YAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAG,IAAA;UACA,IAAAC,QAAA,GAAAC,QAAA,CAAAC,cAAA;UACA,IAAAC,OAAA,GAAAtC,OAAA,CAAAuC,IAAA,CAAAJ,QAAA;UACAlC,UAAA,CAAAC,KAAA,CAAAC,IAAA,GAAA4B,GAAA,CAAAvB,IAAA,CAAAL,IAAA;UACAF,UAAA,CAAAC,KAAA,CAAAE,OAAA,GAAA2B,GAAA,CAAAvB,IAAA,CAAAgC,OAAA;UACAvC,UAAA,CAAAK,KAAA,CAAAE,IAAA,GAAAuB,GAAA,CAAAvB,IAAA,CAAAF,KAAA;UACAL,UAAA,CAAAW,MAAA,IAAAJ,IAAA,GAAAuB,GAAA,CAAAvB,IAAA,CAAAC,KAAA;UACA6B,OAAA,CAAAG,SAAA,CAAAxC,UAAA;QACA;UACA,KAAAyC,QAAA,CAAAC,KAAA,CAAAZ,GAAA,CAAAa,GAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}